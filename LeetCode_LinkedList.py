class Node():
    def __init__(self,val):
        self.val = val
        self.next = None
        self.index = 0
        #print("Node is initialized")
        
class MyLinkedList:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.Head = None
        #print("Linked List is intialized")
        

    def get(self, index: int) -> int:
        """
        Get the value of the index-th node in the linked list. If the index is invalid, return -1.
        """
        print("\tGet value at index :{}".format(self.index))
        if self.Head is None:
            print("\t\tLinked List is empty")
        else:
            n = self.Head
            itr = 0 
            while itr < self.index:
                #print("itr-{},index:{},size:{}".format(itr,index,self.index))
                if itr == index:
                    #print("return {}".format(n.val))
                    return n.val
                n = n.next
                itr += 1
        print("\t\treturn -1")
        return -1
                
    def addAtHead(self, val: int) -> None:
        """
        Add a node of value val before the first element of the linked list. After the insertion, the new node will be the first node of the linked list.
        """
        print("\tAdd value-{} at head".format(val))
        if self.Head is None:
            self.Head = Node(val)
            self.next = None
            self.index = 1
        else:
            n = Node(val)
            n.next = self.Head 
            self.Head = n
            self.index += 1
        #self.printLinkedList()

    def addAtTail(self, val: int) -> None:
        """
        Append a node of value val to the last element of the linked list.
        """
        print("\tAdd value-{} at tail".format(val))
        n = self.Head
        i = 0
        while i < self.index-1:
            n = n.next
            i += 1
        n1 = Node(val)
        n.next = n1
        n1.next = None
        self.index += 1
        #self.printLinkedList()
        

    def addAtIndex(self, index: int, val: int) -> None:
        """
        Add a node of value val before the index-th node in the linked list. If index equals to the length of linked list, the node will be appended to the end of linked list. If index is greater than the length, the node will not be inserted.
        """
        print("\tAdd val-{} at index-{}".format(val,index))
        if self.Head is None:
            if index == 0:
                print("\t\tLinked list is currently empty, Adding {} as the first element".format(val))
                n = Node(val)
                self.Head = n
                n.next = None
                self.index = 1
            else:
                print("\t\tLinked list is empty and index provided is invalid")
        else:    
            i = 0
            n = self.Head
            prev = self.Head
            n1 = Node(val)
            while  i <= self.index:
                if i == index:
                    if index == 0:
                        #print("prev-{},next-{}".format(n1.val,n.val))
                        self.Head = n1
                        n1.next = n
                        self.index += 1
                        break
                    else:
                        n1.next = prev.next 
                        prev.next = n1
                        self.index += 1
                        break
                else:
                    prev = n
                    n = n.next 
                    i += 1
        #self.printLinkedList()
            
        

    def deleteAtIndex(self, index: int) -> None:
        """
        Delete the index-th node in the linked list, if the index is valid.
        """
        print("\tDelete value from index-{}".format(index))
        if self.Head is None:
            print("\t\tEmpty Linked List")
        else:
            n = self.Head
            prev = self.Head
            i = 0
            while i < self.index:
                #print("self.index:",self.index)
                if i == index:
                    if index == 0:
                        if self.index > 1:
                            n.val = n.next.val
                            n.next = n.next.next
                            self.Head = n
                            self.index -= 1
                            break
                        else:
                            self.Head = None
                            break
                    else:
                        prev.next = n.next
                        self.index -= 1
                        break
                else:
                    prev = n
                    n = n.next
                    i += 1
            #self.printLinkedList()
        
        
    def printLinkedList(self):
        if self.Head is None:
            print("\tEmpty Linked List")
        else:
            i = 0
            n = self.Head
            while i  < self.index:
                print("{}->".format(n.val),end="")
                n = n.next
                i += 1
            print("Null")
            
L = MyLinkedList()
#L.addAtHead(1)
#L.addAtTail(3)
#L.addAtIndex(1,2)
#L.get(1)
#L.deleteAtIndex(0)
#L.get(0)
#L.addAtIndex(0,10)
#L.addAtIndex(0,20)
#L.addAtIndex(1,30)
#L.get(0)
L.addAtHead(171)
L.addAtHead(733)
L.addAtHead(411)
L.get(1)
L.addAtIndex(1,390)
L.addAtIndex(4,801)
L.deleteAtIndex(2)
L.get(2)
L.addAtTail(277)
L.get(4)
L.addAtHead(354)
L.addAtTail(188)
L.addAtIndex(5,239)
L.addAtIndex(3,390)
L.addAtHead(269)
L.addAtHead(443)
L.addAtTail(104)
L.deleteAtIndex(9)
L.deleteAtIndex(5)
L.get(8)
L.get(3)
L.get(8)
L.addAtHead(116)
L.deleteAtIndex(11)
L.deleteAtIndex(11)
L.get(9)
L.addAtIndex(11,747)
L.addAtTail(775)
L.addAtHead(105)
L.addAtHead(724)
L.addAtTail(287)
L.addAtTail(739)
L.get(3)
L.addAtTail(773)
L.addAtHead(730)
L.addAtHead(48)
L.addAtHead(831)
L.addAtTail(85)
L.addAtHead(649)
L.addAtHead(234)
L.addAtIndex(7,204)
L.addAtTail(877)
L.get(7)
L.addAtIndex(1,945)
L.get(2)
L.addAtHead(803)
L.addAtTail(268)
L.addAtHead(207)
L.addAtHead(145)
L.addAtHead(215)
L.get(8)
L.addAtTail(737)
L.get(21)
L.addAtTail(773)
L.addAtTail(701)
L.deleteAtIndex(19)
L.addAtHead(68)
L.addAtTail(498)
L.addAtHead(561)
L.addAtTail(910)
L.addAtIndex(5,578)
L.addAtTail(648)
L.addAtIndex(23,789)
L.addAtHead(508)
L.get(12)
L.addAtTail(672)
L.addAtIndex(29,739)
L.addAtHead(151)
L.addAtTail(320)
L.addAtHead(299)
L.addAtHead(720)
L.get(48)
L.get(33)
L.addAtIndex(11,937)
L.addAtTail(951)
L.deleteAtIndex(44)
L.addAtIndex(27,806)
L.addAtTail(772)
L.deleteAtIndex(16)
L.addAtIndex(46,215)
L.get(49)
L.deleteAtIndex(4)
L.addAtHead(344)
L.addAtIndex(26,66)
L.addAtHead(302)
L.get(22)
L.addAtIndex(8,317)
L.get(48)
L.addAtHead(962)
L.addAtTail(758)
L.addAtHead(200)
L.addAtHead(558)
L.addAtHead(225)
L.addAtTail(655)
L.addAtHead(486)
L.addAtTail(944)
L.addAtHead(144)
L.deleteAtIndex(58)
L.addAtIndex(47,276)
L.printLinkedList()
print("******************************************************************************COMPLETED 100 test cases")
L.addAtTail(454)
L.addAtHead(712)
L.addAtTail(16)
L.get(19)
L.addAtIndex(5,236)
L.get(25)
L.addAtHead(958)
L.addAtHead(688)
L.addAtHead(723)
L.addAtTail(183)
L.addAtTail(435)
L.addAtHead(380)
L.addAtHead(760)
L.addAtIndex(46,157)
L.addAtTail(937)
L.get(44)
L.deleteAtIndex(65)
L.get(68)
L.addAtHead(946)
L.addAtIndex(35,377)
L.get(18)
L.addAtHead(124)
L.addAtIndex(22,690)
L.addAtIndex(30,616)
L.addAtTail(498)
L.addAtHead(811)
L.addAtTail(986)
L.addAtTail(890)
L.addAtHead(791)
L.addAtIndex(85,372)
L.addAtHead(223)
L.addAtIndex(42,0)
L.addAtTail(887)
L.addAtIndex(89,819)
L.addAtIndex(54,797)
L.addAtHead(165)
L.deleteAtIndex(69)
L.addAtTail(739)
L.addAtHead(410)
L.addAtTail(524)
L.addAtHead(673)
L.addAtIndex(37,588)
L.addAtHead(555)
L.addAtTail(846)
L.addAtIndex(61,476)
L.addAtIndex(98,191)
L.addAtTail(418)
L.addAtIndex(73,357)
L.get(8)
L.addAtTail(688)
L.get(76)
L.addAtHead(534)
L.deleteAtIndex(48)
L.addAtIndex(95,760)
L.addAtIndex(102,943)
L.deleteAtIndex(18)
L.addAtTail(112)
L.deleteAtIndex(77)
L.get(77)
L.deleteAtIndex(91)
L.get(73)
L.addAtHead(594)
L.addAtTail(450)
L.addAtHead(546)
L.addAtHead(243)
L.get(17)
L.deleteAtIndex(23)
L.addAtTail(593)
L.get(59)
L.addAtHead(191)
L.addAtHead(762)
L.deleteAtIndex(12)
L.get(17)
L.get(45)
L.deleteAtIndex(86)
L.addAtTail(963)
L.addAtHead(889)
L.addAtHead(112)
L.addAtTail(461)
L.addAtIndex(42,517)
L.addAtHead(403)
L.addAtIndex(84,577)
L.addAtIndex(107,117)
L.addAtHead(510)
L.addAtTail(527)
L.deleteAtIndex(15)
L.deleteAtIndex(6)
L.addAtHead(798)
L.addAtIndex(29,269)
L.addAtTail(805)
L.addAtIndex(47,545)
L.addAtTail(769)
L.get(35)
L.get(117)
L.addAtTail(500)
L.get(3)
L.addAtTail(737)
L.addAtHead(687)
L.addAtTail(752)
L.get(80)
L.printLinkedList()
print("****************************************************************************COMPLETED 200 TEST CASES")
L.get(105)
L.addAtHead(192)
L.addAtIndex(54,412)
L.addAtHead(719)
L.addAtTail(653)
L.addAtIndex(107,61)
L.deleteAtIndex(25)
L.addAtHead(182)
L.addAtTail(853)
L.addAtHead(795)
L.addAtTail(45)
L.addAtTail(445)
L.addAtTail(550)
L.get(39)
L.addAtTail(433)
L.addAtTail(551)
L.addAtTail(138)
L.addAtTail(924)
L.addAtTail(146)
L.addAtTail(935)
L.addAtHead(178)
L.addAtHead(237)
L.addAtTail(557)
L.addAtTail(61)
L.addAtTail(490)
L.addAtTail(488)
L.deleteAtIndex(133)
L.deleteAtIndex(96)
L.addAtTail(944)
L.addAtTail(394)
L.get(35)
L.addAtIndex(74,949)
L.addAtTail(853)
L.addAtHead(154)
L.addAtTail(647)
L.deleteAtIndex(23)
L.deleteAtIndex(114)
L.addAtHead(445)
L.addAtHead(678)
L.addAtTail(793)
L.addAtIndex(151,573)
L.addAtHead(700)
L.get(22)
L.addAtTail(736)
L.addAtTail(632)
L.addAtTail(953)
L.addAtIndex(156,91)
L.addAtIndex(25,55)
L.addAtHead(815)
L.addAtHead(490)
L.addAtHead(289)
L.addAtHead(961)
L.deleteAtIndex(157)
L.deleteAtIndex(152)
L.addAtHead(909)
L.addAtIndex(35,383)
L.addAtHead(872)
L.addAtTail(907)
L.addAtTail(987)
L.get(94)
L.addAtTail(335)
L.addAtIndex(40,425)
L.get(11)
L.addAtTail(314)
L.addAtIndex(134,139)
L.addAtTail(450)
L.addAtHead(787)
L.addAtHead(984)
L.addAtHead(434)
L.get(47)
L.addAtHead(601)
L.addAtTail(516)
L.addAtHead(41)
L.addAtTail(38)
L.deleteAtIndex(103)
L.addAtIndex(54,997)
L.addAtHead(690)
L.addAtIndex(85,439)
L.addAtTail(88)
L.addAtTail(8)
L.addAtTail(776)
L.get(170)
L.addAtIndex(68,265)
L.addAtIndex(170,762)
L.get(20)
L.addAtHead(388)
L.addAtTail(835)
L.get(32)
L.addAtHead(285)
L.get(154)
L.addAtHead(54)
L.addAtHead(266)
L.addAtTail(559)
L.addAtHead(154)
L.get(79)
L.get(189)
L.addAtTail(883)
L.addAtIndex(64,181)
L.addAtTail(780)
L.addAtIndex(39,95)
L.printLinkedList()
print("****************************************************************************COMPLETED 300 TEST CASES")
L.addAtTail(378)
L.addAtHead(648)
L.addAtTail(79)
L.addAtIndex(119,864)
L.addAtHead(573)
L.get(193)
L.addAtIndex(80,150)
L.addAtTail(303)
L.addAtIndex(66,231)
L.addAtIndex(49,641)
L.addAtTail(121)
L.addAtHead(767)
L.addAtTail(113)
L.get(148)
L.addAtHead(75)
L.addAtHead(54)
L.addAtHead(561)
L.addAtTail(739)
L.addAtHead(31)
L.get(212)
L.get(4)
L.addAtHead(894)
L.addAtIndex(203,202)
L.addAtTail(792)
L.addAtIndex(150,392)
L.deleteAtIndex(189)
L.deleteAtIndex(42)
L.addAtTail(397)
L.addAtIndex(101,732)
L.get(12)
L.get(125)
L.addAtHead(773)
L.deleteAtIndex(178)
L.deleteAtIndex(116)
L.addAtTail(559)
L.addAtTail(653)
L.addAtTail(226)
L.get(146)
L.addAtIndex(12,547)
L.addAtTail(919)
L.addAtIndex(131,868)
L.deleteAtIndex(98)
L.get(126)
L.addAtIndex(191,841)
L.addAtHead(430)
L.addAtTail(834)
L.deleteAtIndex(25)
L.addAtTail(918)
L.addAtTail(798)
L.addAtHead(511)
L.get(90)
L.addAtIndex(188,779)
L.addAtIndex(164,566)
L.addAtTail(746)
L.deleteAtIndex(117)
L.addAtIndex(216,768)
L.addAtHead(901)
L.addAtIndex(22,275)
L.addAtHead(668)
L.get(98)
L.addAtHead(510)
L.addAtHead(242)
L.addAtIndex(160,767)
L.get(125)
L.get(89)
L.addAtTail(588)
L.addAtHead(303)
L.addAtIndex(61,773)
L.addAtIndex(79,881)
L.deleteAtIndex(191)
L.addAtTail(100)
L.get(192)
L.get(90)
L.addAtTail(147)
L.addAtTail(838)
L.addAtIndex(54,323)
L.deleteAtIndex(156)
L.addAtIndex(123,53)
L.deleteAtIndex(125)
L.addAtTail(397)
L.addAtTail(152)
L.addAtTail(799)
L.deleteAtIndex(110)
L.addAtHead(210)
L.addAtHead(79)
L.addAtIndex(218,923)
L.addAtTail(139)
L.addAtIndex(186,252)
L.addAtTail(627)
L.addAtHead(375)
L.get(37)
L.addAtHead(186)
L.addAtHead(835)
L.addAtTail(531)
L.addAtTail(242)
L.get(41)
L.addAtHead(228)
L.get(154)
L.deleteAtIndex(84)
L.addAtHead(208)
L.printLinkedList()
print("****************************************************************************COMPLETED 400 TEST CASES")
L.addAtTail(887)
L.addAtIndex(61,409)
L.deleteAtIndex(156)
L.addAtHead(192)
L.addAtTail(555)
L.addAtHead(439)
L.get(214)
L.addAtHead(18)
L.addAtTail(484)
L.addAtIndex(125,391)
L.get(54)
L.get(260)
L.addAtIndex(171,63)
L.addAtIndex(239,565)
L.addAtTail(781)
L.get(263)
L.deleteAtIndex(20)
L.addAtIndex(39,847)
L.addAtTail(480)
L.get(23)
L.addAtIndex(79,499)
L.addAtHead(307)
L.addAtIndex(178,371)
L.addAtHead(569)
L.addAtTail(740)
L.addAtTail(249)
L.addAtHead(709)
L.get(35)
L.addAtTail(47)
L.addAtTail(196)
L.addAtHead(90)
L.get(71)
L.addAtHead(553)
L.addAtHead(213)
L.addAtHead(267)
L.get(36)
L.addAtIndex(17,146)
L.addAtHead(841)
L.get(116)
L.addAtHead(315)
L.addAtIndex(46,314)
L.get(94)
L.addAtTail(598)
L.deleteAtIndex(218)
L.deleteAtIndex(194)
L.addAtIndex(10,979)
L.addAtIndex(78,508)
L.addAtHead(130)
L.addAtTail(558)
L.get(185)
L.addAtTail(41)
L.get(50)
L.addAtTail(407)
L.addAtTail(690)
L.get(196)
L.addAtHead(247)
L.addAtIndex(266,500)
L.addAtHead(445)
L.addAtTail(933)
L.addAtHead(685)
L.get(123)
L.addAtHead(924)
L.addAtTail(380)
L.addAtHead(308)
L.addAtTail(967)
L.addAtHead(257)
L.addAtHead(797)
L.addAtIndex(181,922)
L.addAtIndex(37,783)
L.addAtIndex(195,92)
L.deleteAtIndex(123)
L.addAtHead(241)
L.addAtTail(299)
L.addAtHead(229)
L.addAtHead(788)
L.addAtHead(99)
L.addAtTail(420)
L.addAtTail(607)
L.addAtTail(815)
L.addAtHead(358)
L.addAtIndex(20,113)
L.deleteAtIndex(74)
L.deleteAtIndex(163)
L.addAtTail(306)
L.deleteAtIndex(66)
L.addAtTail(599)
L.addAtTail(823)
L.addAtTail(866)
L.addAtHead(539)
L.deleteAtIndex(68)
L.addAtIndex(254,137)
L.addAtTail(711)
L.addAtHead(213)
L.addAtTail(70)
L.deleteAtIndex(159)
L.addAtTail(698)
L.addAtTail(891)
L.addAtHead(875)
L.get(94)
L.addAtHead(610)
L.printLinkedList()
print("****************************************************************************COMPLETED 500 TEST CASES")
L.deleteAtIndex(298)
L.addAtHead(740)
L.deleteAtIndex(75)
L.addAtTail(267)
L.get(123)
L.get(87)
L.addAtTail(930)
L.addAtHead(434)
L.addAtHead(988)
L.addAtHead(979)
L.addAtHead(685)
L.addAtHead(207)
L.addAtTail(673)
L.addAtHead(317)
L.get(311)
L.addAtTail(325)
L.addAtHead(89)
L.addAtHead(610)
L.addAtHead(893)
L.addAtTail(384)
L.addAtHead(914)
L.addAtTail(115)
L.addAtTail(370)
L.get(141)
L.addAtHead(175)
L.addAtHead(283)
L.addAtHead(194)
L.addAtIndex(110,345)
L.deleteAtIndex(58)
L.addAtTail(261)
L.addAtHead(871)
L.addAtHead(754)
L.addAtIndex(100,0)
L.deleteAtIndex(206)
L.get(79)
L.get(156)
L.get(309)
L.deleteAtIndex(215)
L.get(120)
L.addAtTail(226)
L.addAtHead(345)
L.addAtHead(581)
L.addAtTail(436)
L.addAtTail(715)
L.get(36)
L.addAtIndex(337,308)
L.addAtHead(357)
L.addAtIndex(219,916)
L.addAtHead(362)
L.addAtHead(36)
L.addAtTail(311)
L.addAtTail(439)
L.addAtTail(652)
L.addAtTail(810)
L.addAtHead(336)
L.get(42)
L.addAtTail(954)
L.addAtTail(318)
L.deleteAtIndex(57)
L.addAtTail(980)
L.get(111)
L.get(308)
L.addAtIndex(195,308)
L.deleteAtIndex(142)
L.deleteAtIndex(313)
L.addAtTail(469)
L.deleteAtIndex(38)
L.get(181)
L.addAtIndex(93,794)
L.addAtHead(164)
L.addAtHead(950)
L.addAtTail(453)
L.addAtHead(665)
L.addAtTail(210)
L.addAtIndex(181,15)
L.addAtHead(937)
L.addAtHead(66)
L.addAtHead(649)
L.addAtHead(60)
L.addAtHead(245)
L.addAtHead(512)
L.get(333)
L.addAtIndex(80,381)
L.addAtHead(842)
L.addAtTail(896)
L.addAtIndex(360,528)
L.addAtTail(404)
L.get(225)
L.deleteAtIndex(162)
L.addAtTail(551)
L.addAtHead(443)
L.addAtIndex(20,174)
L.addAtTail(224)
L.addAtHead(959)
L.addAtIndex(116,97)
L.deleteAtIndex(185)
L.addAtHead(917)
L.addAtHead(556)
L.addAtTail(375)
L.addAtTail(602)
L.printLinkedList()
print("****************************************************************************COMPLETED 600 TEST CASES")
L.addAtTail(73)
L.addAtTail(993)
L.addAtTail(961)
L.addAtTail(743)
L.addAtTail(768)
L.deleteAtIndex(337)
L.addAtIndex(384,434)
L.addAtHead(503)
L.deleteAtIndex(215)
L.addAtTail(397)
L.addAtTail(676)
L.get(71)
L.addAtTail(260)
L.addAtTail(788)
L.get(181)
L.addAtIndex(159,481)
L.addAtIndex(382,998)
L.addAtTail(25)
L.addAtTail(699)
L.get(340)
L.addAtTail(147)
L.get(201)
L.addAtIndex(115,119)
L.addAtIndex(133,496)
L.deleteAtIndex(172)
L.addAtIndex(354,97)
L.get(257)
L.deleteAtIndex(168)
L.addAtTail(210)
L.addAtTail(981)
L.addAtIndex(397,486)
L.get(303)
L.addAtTail(366)
L.addAtHead(592)
L.addAtTail(327)
L.deleteAtIndex(264)
L.addAtHead(787)
L.addAtTail(81)
L.get(141)
L.get(156)
L.get(188)
L.addAtIndex(135,476)
L.addAtHead(945)
L.addAtIndex(13,671)
L.addAtTail(295)
L.addAtTail(621)
L.get(152)
L.addAtTail(901)
L.addAtIndex(366,19)
L.addAtIndex(368,718)
L.addAtTail(846)
L.addAtTail(795)
L.addAtHead(986)
L.addAtHead(378)
L.addAtHead(528)
L.addAtHead(143)
L.deleteAtIndex(65)
L.addAtHead(142)
L.get(12)
L.addAtHead(77)
L.addAtTail(486)
L.addAtTail(153)
L.addAtTail(969)
L.addAtIndex(333,733)
L.addAtTail(414)
L.addAtHead(555)
L.addAtIndex(165,205)
L.addAtTail(992)
L.addAtIndex(394,360)
L.addAtTail(785)
L.get(164)
L.addAtHead(239)
L.addAtTail(600)
L.addAtHead(532)
L.addAtHead(986)
L.addAtHead(739)
L.addAtTail(92)
L.addAtTail(609)
L.addAtTail(75)
L.addAtTail(275)
L.addAtHead(906)
L.addAtHead(342)
L.get(68)
L.addAtHead(718)
L.addAtTail(873)
L.addAtIndex(127,371)
L.addAtHead(544)
L.deleteAtIndex(297)
L.addAtIndex(197,289)
L.addAtTail(989)
L.addAtTail(749)
L.deleteAtIndex(71)
L.addAtTail(718)
L.addAtHead(208)
L.get(118)
L.addAtHead(517)
L.addAtTail(643)
L.deleteAtIndex(153)
L.addAtTail(143)
L.addAtTail(431)
L.printLinkedList()
print("****************************************************************************COMPLETED 700 TEST CASES")
L.addAtHead(115)
L.deleteAtIndex(396)
L.addAtTail(744)
L.deleteAtIndex(364)
L.addAtTail(408)
L.get(189)
L.addAtHead(478)
L.addAtIndex(44,880)
L.get(210)
L.addAtIndex(272,946)
L.addAtIndex(69,458)
L.addAtIndex(317,721)
L.addAtHead(688)
L.addAtIndex(33,412)
L.get(97)
L.addAtHead(652)
L.addAtTail(795)
L.addAtIndex(52,495)
L.addAtTail(117)
L.addAtHead(276)
L.addAtIndex(428,865)
L.addAtIndex(57,924)
L.addAtHead(872)
L.addAtHead(784)
L.addAtHead(895)
L.addAtTail(450)
L.addAtTail(88)
L.deleteAtIndex(86)
L.get(231)
L.addAtIndex(387,857)
L.addAtTail(470)
L.addAtTail(925)
L.addAtTail(678)
L.addAtHead(776)
L.addAtTail(828)
L.deleteAtIndex(444)
L.addAtTail(396)
L.addAtTail(985)
L.addAtIndex(87,42)
L.get(302)
L.addAtTail(670)
L.addAtTail(29)
L.deleteAtIndex(170)
L.deleteAtIndex(452)
L.addAtTail(296)
L.addAtTail(888)
L.addAtIndex(180,381)
L.addAtTail(238)
L.addAtHead(467)
L.addAtTail(645)
L.addAtTail(795)
L.deleteAtIndex(354)
L.addAtTail(1)
L.addAtHead(948)
L.addAtIndex(67,343)
L.addAtTail(377)
L.addAtHead(402)
L.get(319)
L.addAtTail(94)
L.addAtTail(748)
L.addAtHead(832)
L.deleteAtIndex(476)
L.addAtHead(452)
L.addAtHead(275)
L.addAtTail(763)
L.get(76)
L.addAtHead(851)
L.deleteAtIndex(371)
L.addAtHead(454)
L.deleteAtIndex(397)
L.get(162)
L.addAtHead(214)
L.addAtIndex(268,109)
L.addAtHead(682)
L.addAtHead(694)
L.get(219)
L.addAtHead(669)
L.addAtTail(990)
L.addAtTail(248)
L.addAtTail(480)
L.addAtIndex(284,890)
L.addAtHead(981)
L.get(148)
L.addAtTail(941)
L.addAtHead(786)
L.deleteAtIndex(462)
L.addAtTail(539)
L.addAtIndex(116,995)
L.addAtHead(57)
L.addAtTail(434)
L.addAtTail(115)
L.addAtHead(877)
L.addAtTail(863)
L.addAtTail(3)
L.get(336)
L.deleteAtIndex(464)
L.addAtHead(161)
L.addAtTail(677)
L.addAtTail(610)
L.addAtIndex(67,446)
L.printLinkedList()
print("****************************************************************************COMPLETED 800 TEST CASES")
L.get(62)
L.addAtHead(838)
L.addAtHead(761)
L.addAtTail(671)
L.addAtIndex(466,35)
L.get(241)
L.addAtTail(210)
L.get(91)
L.addAtTail(487)
L.addAtTail(678)
L.addAtTail(337)
L.addAtHead(924)
L.deleteAtIndex(55)
L.deleteAtIndex(331)
L.addAtTail(688)
L.addAtHead(705)
L.addAtHead(376)
L.addAtTail(844)
L.addAtHead(794)
L.deleteAtIndex(119)
L.addAtHead(969)
L.addAtHead(360)
L.addAtTail(63)
L.deleteAtIndex(335)
L.addAtTail(633)
L.addAtTail(628)
L.addAtHead(798)
L.addAtHead(237)
L.addAtTail(784)
L.addAtIndex(68,532)
L.addAtTail(523)
L.addAtHead(597)
L.addAtHead(912)
L.get(345)
L.deleteAtIndex(122)
L.addAtTail(654)
L.get(111)
L.addAtTail(584)
L.addAtHead(679)
L.addAtIndex(96,280)
L.get(318)
L.addAtHead(138)
L.addAtIndex(524,413)
L.addAtHead(931)
L.deleteAtIndex(421)
L.addAtTail(390)
L.addAtTail(795)
L.get(91)
L.addAtTail(992)
L.addAtIndex(191,347)
L.addAtTail(59)
L.get(191)
L.addAtTail(511)
L.get(63)
L.addAtTail(370)
L.addAtTail(266)
L.deleteAtIndex(446)
L.addAtHead(953)
L.addAtHead(124)
L.addAtTail(276)
L.addAtHead(749)
L.addAtIndex(222,949)
L.addAtHead(836)
L.addAtTail(575)
L.addAtTail(361)
L.addAtTail(199)
L.deleteAtIndex(301)
L.addAtTail(303)
L.get(551)
L.addAtHead(359)
L.addAtTail(522)
L.get(541)
L.get(164)
L.addAtHead(17)
L.addAtTail(105)
L.addAtHead(176)
L.addAtHead(987)
L.addAtTail(481)
L.addAtTail(521)
L.addAtHead(933)
L.addAtHead(200)
L.addAtHead(919)
L.addAtHead(838)
L.deleteAtIndex(447)
L.addAtTail(613)
L.deleteAtIndex(62)
L.addAtHead(337)
L.addAtIndex(392,321)
L.get(255)
L.addAtTail(132)
L.addAtHead(212)
L.addAtTail(532)
L.addAtTail(746)
L.addAtIndex(270,297)
L.addAtTail(2)
L.addAtHead(628)
L.addAtTail(765)
L.addAtHead(17)
L.addAtHead(500)
L.addAtHead(729)
L.printLinkedList()
print("****************************************************************************COMPLETED 900 TEST CASES")
L.deleteAtIndex(266)
L.deleteAtIndex(67)
L.addAtTail(400)
L.deleteAtIndex(10)
L.deleteAtIndex(468)
L.addAtHead(538)
L.addAtHead(534)
L.addAtHead(547)
L.addAtTail(754)
L.addAtIndex(521,272)
L.addAtHead(96)
L.get(445)
L.addAtHead(439)
L.addAtHead(354)
L.addAtTail(310)
L.addAtTail(197)
L.get(23)
L.addAtIndex(143,521)
L.deleteAtIndex(385)
L.addAtTail(757)
L.addAtHead(28)
L.addAtTail(81)
L.addAtIndex(126,974)
L.addAtIndex(213,677)
L.get(11)
L.get(163)
L.get(467)
L.addAtHead(750)
L.addAtIndex(513,511)
L.addAtHead(987)
L.addAtHead(705)
L.addAtIndex(284,106)
L.addAtIndex(168,325)
L.deleteAtIndex(543)
L.addAtTail(316)
L.addAtHead(795)
L.addAtHead(429)
L.addAtHead(298)
L.deleteAtIndex(579)
L.addAtHead(504)
L.get(81)
L.addAtHead(380)
L.addAtTail(379)
L.addAtTail(808)
L.addAtHead(553)
L.get(132)
L.addAtTail(322)
L.get(480)
L.addAtHead(369)
L.addAtTail(144)
L.get(281)
L.addAtTail(768)
L.addAtTail(467)
L.addAtTail(368)
L.addAtIndex(350,573)
L.addAtTail(274)
L.get(332)
L.addAtTail(440)
L.deleteAtIndex(312)
L.addAtTail(41)
L.addAtHead(819)
L.addAtTail(830)
L.addAtIndex(244,518)
L.addAtHead(526)
L.addAtHead(325)
L.addAtHead(313)
L.addAtTail(877)
L.addAtIndex(50,322)
L.addAtHead(452)
L.get(173)
L.addAtHead(425)
L.addAtIndex(446,18)
L.addAtTail(738)
L.get(470)
L.addAtIndex(608,663)
L.addAtHead(553)
L.addAtHead(929)
L.get(356)
L.addAtHead(734)
L.deleteAtIndex(75)
L.addAtTail(821)
L.addAtHead(374)
L.deleteAtIndex(627)
L.addAtIndex(176,752)
L.addAtTail(105)
L.addAtHead(988)
L.deleteAtIndex(239)
L.deleteAtIndex(614)
L.addAtIndex(365,296)
L.addAtTail(39)
L.addAtHead(575)
L.get(205)
L.deleteAtIndex(291)
L.addAtTail(41)
L.addAtTail(202)
L.get(347)
L.addAtIndex(212,985)
L.addAtIndex(69,754)
L.get(616)
L.addAtHead(361)
L.addAtIndex(483,699)
L.addAtHead(744)
L.printLinkedList()
print("****************************************************************************COMPLETED 1000 TEST CASES")
